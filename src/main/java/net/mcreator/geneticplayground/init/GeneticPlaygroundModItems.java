/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.geneticplayground.init;

import net.neoforged.neoforge.registries.DeferredRegister;
import net.neoforged.neoforge.registries.DeferredItem;
import net.neoforged.neoforge.registries.DeferredHolder;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.item.Rarity;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.BlockItem;

import net.mcreator.geneticplayground.item.WoolyPlasmidItem;
import net.mcreator.geneticplayground.item.WaterSpeedPlasmidItem;
import net.mcreator.geneticplayground.item.WaterBreathingPlasmidItem;
import net.mcreator.geneticplayground.item.UraniumItem;
import net.mcreator.geneticplayground.item.UraniumIngotItem;
import net.mcreator.geneticplayground.item.UraniumFuelRodItem;
import net.mcreator.geneticplayground.item.UnknownIngotItem;
import net.mcreator.geneticplayground.item.TeleporationPlasmidItem;
import net.mcreator.geneticplayground.item.SyringeOfSterileBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfSheepBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfSalmonBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfRabbitBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfPigBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfMuleBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfHorseBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfEndermanEnderfluidItem;
import net.mcreator.geneticplayground.item.SyringeOfDonkeyBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfCreeperBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfCowBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfCodBloodItem;
import net.mcreator.geneticplayground.item.SyringeOfChickenBloodItem;
import net.mcreator.geneticplayground.item.SyringeItem;
import net.mcreator.geneticplayground.item.SterileBloodItem;
import net.mcreator.geneticplayground.item.SpentFuelRodItem;
import net.mcreator.geneticplayground.item.SheepCellItem;
import net.mcreator.geneticplayground.item.SalmonCellItem;
import net.mcreator.geneticplayground.item.RawLeadItem;
import net.mcreator.geneticplayground.item.RabbitCellItem;
import net.mcreator.geneticplayground.item.QuantumCircuitItem;
import net.mcreator.geneticplayground.item.PlasmaResidueItem;
import net.mcreator.geneticplayground.item.PigCellItem;
import net.mcreator.geneticplayground.item.NeedleItem;
import net.mcreator.geneticplayground.item.MuleCellItem;
import net.mcreator.geneticplayground.item.MovementSpeedPlasmidItem;
import net.mcreator.geneticplayground.item.MonitorItem;
import net.mcreator.geneticplayground.item.MilkablePlasmidItem;
import net.mcreator.geneticplayground.item.MaxHealthPlasmidItem;
import net.mcreator.geneticplayground.item.MachineSpeedUpgradeItem;
import net.mcreator.geneticplayground.item.LeadIngotItem;
import net.mcreator.geneticplayground.item.HydrophobiaPlasmidItem;
import net.mcreator.geneticplayground.item.HydrophobiaDoubleHelixItem;
import net.mcreator.geneticplayground.item.HorseCellItem;
import net.mcreator.geneticplayground.item.HigherJumpPlasmidItem;
import net.mcreator.geneticplayground.item.HeatTankItem;
import net.mcreator.geneticplayground.item.GrazingPlasmidItem;
import net.mcreator.geneticplayground.item.FluidTankItem;
import net.mcreator.geneticplayground.item.ExplosivePlasmidItem;
import net.mcreator.geneticplayground.item.EnergyBatteryItem;
import net.mcreator.geneticplayground.item.EndersightPlasmidItem;
import net.mcreator.geneticplayground.item.EndermanCellItem;
import net.mcreator.geneticplayground.item.EmptyPlasmidItem;
import net.mcreator.geneticplayground.item.EggPlasmidItem;
import net.mcreator.geneticplayground.item.DoubleHelixWoolyItem;
import net.mcreator.geneticplayground.item.DoubleHelixWaterSpeedItem;
import net.mcreator.geneticplayground.item.DoubleHelixWaterBreathingItem;
import net.mcreator.geneticplayground.item.DoubleHelixTeleporationItem;
import net.mcreator.geneticplayground.item.DoubleHelixMovementSpeedItem;
import net.mcreator.geneticplayground.item.DoubleHelixMilkableItem;
import net.mcreator.geneticplayground.item.DoubleHelixMaxHealthItem;
import net.mcreator.geneticplayground.item.DoubleHelixHigherJumpItem;
import net.mcreator.geneticplayground.item.DoubleHelixGrazingItem;
import net.mcreator.geneticplayground.item.DoubleHelixFailedItem;
import net.mcreator.geneticplayground.item.DoubleHelixExplosiveItem;
import net.mcreator.geneticplayground.item.DoubleHelixEndersightItem;
import net.mcreator.geneticplayground.item.DoubleHelixEggItem;
import net.mcreator.geneticplayground.item.DonkeyCellItem;
import net.mcreator.geneticplayground.item.DiscardedFuelRodItem;
import net.mcreator.geneticplayground.item.CreeperCellItem;
import net.mcreator.geneticplayground.item.CowCellItem;
import net.mcreator.geneticplayground.item.CopperWireItem;
import net.mcreator.geneticplayground.item.CodCellItem;
import net.mcreator.geneticplayground.item.CircuitItem;
import net.mcreator.geneticplayground.item.ChickenCellItem;
import net.mcreator.geneticplayground.item.BauxiteItem;
import net.mcreator.geneticplayground.item.AluminiumIngotItem;
import net.mcreator.geneticplayground.GeneticPlaygroundMod;

import java.util.function.Function;

public class GeneticPlaygroundModItems {
	public static final DeferredRegister.Items REGISTRY = DeferredRegister.createItems(GeneticPlaygroundMod.MODID);
	public static final DeferredItem<Item> SYRINGE = register("syringe", SyringeItem::new);
	public static final DeferredItem<Item> SYRINGE_OF_PIG_BLOOD = register("syringe_of_pig_blood", SyringeOfPigBloodItem::new);
	public static final DeferredItem<Item> SYRINGE_OF_COW_BLOOD = register("syringe_of_cow_blood", SyringeOfCowBloodItem::new);
	public static final DeferredItem<Item> BLOOD_PURIFIER = block(GeneticPlaygroundModBlocks.BLOOD_PURIFIER);
	public static final DeferredItem<Item> PLASMA_RESIDUE_BUCKET = register("plasma_residue_bucket", PlasmaResidueItem::new);
	public static final DeferredItem<Item> MACHINE_SPEED_UPGRADE = register("machine_speed_upgrade", MachineSpeedUpgradeItem::new);
	public static final DeferredItem<Item> PIG_CELL = register("pig_cell", PigCellItem::new);
	public static final DeferredItem<Item> COW_CELL = register("cow_cell", CowCellItem::new);
	public static final DeferredItem<Item> STERILE_BLOOD_BUCKET = register("sterile_blood_bucket", SterileBloodItem::new);
	public static final DeferredItem<Item> BLOOD_CENTRIFUGE = block(GeneticPlaygroundModBlocks.BLOOD_CENTRIFUGE);
	public static final DeferredItem<Item> CREATIVE_ENERGY_BLOCK = block(GeneticPlaygroundModBlocks.CREATIVE_ENERGY_BLOCK);
	public static final DeferredItem<Item> CELL_ANALYZER = block(GeneticPlaygroundModBlocks.CELL_ANALYZER);
	public static final DeferredItem<Item> DNA_EXTRACTOR = block(GeneticPlaygroundModBlocks.DNA_EXTRACTOR);
	public static final DeferredItem<Item> DOUBLE_HELIX_MOVEMENT_SPEED = register("double_helix_movement_speed", DoubleHelixMovementSpeedItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_MILKABLE = register("double_helix_milkable", DoubleHelixMilkableItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_MAX_HEALTH = register("double_helix_max_health", DoubleHelixMaxHealthItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_GRAZING = register("double_helix_grazing", DoubleHelixGrazingItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_FAILED = register("double_helix_failed", DoubleHelixFailedItem::new);
	public static final DeferredItem<Item> SYRINGE_OF_STERILE_BLOOD = register("syringe_of_sterile_blood", SyringeOfSterileBloodItem::new);
	public static final DeferredItem<Item> PLASMID_SYNTHESISER = block(GeneticPlaygroundModBlocks.PLASMID_SYNTHESISER);
	public static final DeferredItem<Item> EMPTY_PLASMID = register("empty_plasmid", EmptyPlasmidItem::new);
	public static final DeferredItem<Item> MOVEMENT_SPEED_PLASMID = register("movement_speed_plasmid", MovementSpeedPlasmidItem::new);
	public static final DeferredItem<Item> LAB_BRICK_WALLS = block(GeneticPlaygroundModBlocks.LAB_BRICK_WALLS);
	public static final DeferredItem<Item> LAB_WALLS = block(GeneticPlaygroundModBlocks.LAB_WALLS);
	public static final DeferredItem<Item> BORDERLESS_LAB_WALLS = block(GeneticPlaygroundModBlocks.BORDERLESS_LAB_WALLS);
	public static final DeferredItem<Item> LAB_BRICK_FACADE = block(GeneticPlaygroundModBlocks.LAB_BRICK_FACADE);
	public static final DeferredItem<Item> LAB_WALL_FACADE = block(GeneticPlaygroundModBlocks.LAB_WALL_FACADE);
	public static final DeferredItem<Item> PLASMID_INJECTION_CHAMBER = block(GeneticPlaygroundModBlocks.PLASMID_INJECTION_CHAMBER);
	public static final DeferredItem<Item> MILKABLE_PLASMID = register("milkable_plasmid", MilkablePlasmidItem::new);
	public static final DeferredItem<Item> ALUMINIUM_BLOCK = block(GeneticPlaygroundModBlocks.ALUMINIUM_BLOCK);
	public static final DeferredItem<Item> GRAZING_PLASMID = register("grazing_plasmid", GrazingPlasmidItem::new);
	public static final DeferredItem<Item> MAX_HEALTH_PLASMID = register("max_health_plasmid", MaxHealthPlasmidItem::new);
	public static final DeferredItem<Item> SYRINGE_OF_SHEEP_BLOOD = register("syringe_of_sheep_blood", SyringeOfSheepBloodItem::new);
	public static final DeferredItem<Item> SHEEP_CELL = register("sheep_cell", SheepCellItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_WOOLY = register("double_helix_wooly", DoubleHelixWoolyItem::new);
	public static final DeferredItem<Item> WOOLY_PLASMID = register("wooly_plasmid", WoolyPlasmidItem::new);
	public static final DeferredItem<Item> SYRINGE_OF_ENDERMAN_ENDERFLUID = register("syringe_of_enderman_enderfluid", SyringeOfEndermanEnderfluidItem::new);
	public static final DeferredItem<Item> ENDERMAN_CELL = register("enderman_cell", EndermanCellItem::new);
	public static final DeferredItem<Item> HYDROPHOBIA_DOUBLE_HELIX = register("hydrophobia_double_helix", HydrophobiaDoubleHelixItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_TELEPORATION = register("double_helix_teleporation", DoubleHelixTeleporationItem::new);
	public static final DeferredItem<Item> HYDROPHOBIA_PLASMID = register("hydrophobia_plasmid", HydrophobiaPlasmidItem::new);
	public static final DeferredItem<Item> TELEPORATION_PLASMID = register("teleporation_plasmid", TeleporationPlasmidItem::new);
	public static final DeferredItem<Item> SYRINGE_OF_CHICKEN_BLOOD = register("syringe_of_chicken_blood", SyringeOfChickenBloodItem::new);
	public static final DeferredItem<Item> CHICKEN_CELL = register("chicken_cell", ChickenCellItem::new);
	public static final DeferredItem<Item> EGG_PLASMID = register("egg_plasmid", EggPlasmidItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_EGG = register("double_helix_egg", DoubleHelixEggItem::new);
	public static final DeferredItem<Item> SYRINGE_OF_RABBIT_BLOOD = register("syringe_of_rabbit_blood", SyringeOfRabbitBloodItem::new);
	public static final DeferredItem<Item> RABBIT_CELL = register("rabbit_cell", RabbitCellItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_HIGHER_JUMP = register("double_helix_higher_jump", DoubleHelixHigherJumpItem::new);
	public static final DeferredItem<Item> HIGHER_JUMP_PLASMID = register("higher_jump_plasmid", HigherJumpPlasmidItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_ENDERSIGHT = register("double_helix_endersight", DoubleHelixEndersightItem::new);
	public static final DeferredItem<Item> ENDERSIGHT_PLASMID = register("endersight_plasmid", EndersightPlasmidItem::new);
	public static final DeferredItem<Item> LAB_FAN = block(GeneticPlaygroundModBlocks.LAB_FAN);
	public static final DeferredItem<Item> SYRINGE_OF_HORSE_BLOOD = register("syringe_of_horse_blood", SyringeOfHorseBloodItem::new);
	public static final DeferredItem<Item> HORSE_CELL = register("horse_cell", HorseCellItem::new);
	public static final DeferredItem<Item> SYRINGE_OF_DONKEY_BLOOD = register("syringe_of_donkey_blood", SyringeOfDonkeyBloodItem::new);
	public static final DeferredItem<Item> SYRINGE_OF_MULE_BLOOD = register("syringe_of_mule_blood", SyringeOfMuleBloodItem::new);
	public static final DeferredItem<Item> DONKEY_CELL = register("donkey_cell", DonkeyCellItem::new);
	public static final DeferredItem<Item> MULE_CELL = register("mule_cell", MuleCellItem::new);
	public static final DeferredItem<Item> SYRINGE_OF_COD_BLOOD = register("syringe_of_cod_blood", SyringeOfCodBloodItem::new);
	public static final DeferredItem<Item> COD_CELL = register("cod_cell", CodCellItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_WATER_SPEED = register("double_helix_water_speed", DoubleHelixWaterSpeedItem::new);
	public static final DeferredItem<Item> WATER_SPEED_PLASMID = register("water_speed_plasmid", WaterSpeedPlasmidItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_WATER_BREATHING = register("double_helix_water_breathing", DoubleHelixWaterBreathingItem::new);
	public static final DeferredItem<Item> WATER_BREATHING_PLASMID = register("water_breathing_plasmid", WaterBreathingPlasmidItem::new);
	public static final DeferredItem<Item> LAB_TILES = block(GeneticPlaygroundModBlocks.LAB_TILES);
	public static final DeferredItem<Item> CRACKED_LAB_WALL = block(GeneticPlaygroundModBlocks.CRACKED_LAB_WALL);
	public static final DeferredItem<Item> SYRINGE_OF_SALMON_BLOOD = register("syringe_of_salmon_blood", SyringeOfSalmonBloodItem::new);
	public static final DeferredItem<Item> SALMON_CELL = register("salmon_cell", SalmonCellItem::new);
	public static final DeferredItem<Item> WARNING_SIGN = block(GeneticPlaygroundModBlocks.WARNING_SIGN);
	public static final DeferredItem<Item> BIOHAZARD_SIGN = block(GeneticPlaygroundModBlocks.BIOHAZARD_SIGN);
	public static final DeferredItem<Item> FISSION_POWER_PLANT_CONTROLLER = block(GeneticPlaygroundModBlocks.FISSION_POWER_PLANT_CONTROLLER);
	public static final DeferredItem<Item> GOLD_CABLE = block(GeneticPlaygroundModBlocks.GOLD_CABLE);
	public static final DeferredItem<Item> ALUMINIUM_CABLE = block(GeneticPlaygroundModBlocks.ALUMINIUM_CABLE);
	public static final DeferredItem<Item> NETHERITE_CABLE = block(GeneticPlaygroundModBlocks.NETHERITE_CABLE);
	public static final DeferredItem<Item> NETHER_URANIUM_ORE = block(GeneticPlaygroundModBlocks.NETHER_URANIUM_ORE);
	public static final DeferredItem<Item> URANIUM = register("uranium", UraniumItem::new);
	public static final DeferredItem<Item> URANIUM_INGOT = register("uranium_ingot", UraniumIngotItem::new);
	public static final DeferredItem<Item> URANIUM_FUEL_ROD = register("uranium_fuel_rod", UraniumFuelRodItem::new);
	public static final DeferredItem<Item> UNKNOWN_INGOT = register("unknown_ingot", UnknownIngotItem::new);
	public static final DeferredItem<Item> SPENT_FUEL_ROD = register("spent_fuel_rod", SpentFuelRodItem::new);
	public static final DeferredItem<Item> DISCARDED_FUEL_ROD = register("discarded_fuel_rod", DiscardedFuelRodItem::new);
	public static final DeferredItem<Item> THERMAL_TURBINE = block(GeneticPlaygroundModBlocks.THERMAL_TURBINE);
	public static final DeferredItem<Item> UNKNOWN_BLOCK = block(GeneticPlaygroundModBlocks.UNKNOWN_BLOCK, new Item.Properties().rarity(Rarity.RARE));
	public static final DeferredItem<Item> SUPER_FROZEN_ICE = block(GeneticPlaygroundModBlocks.SUPER_FROZEN_ICE);
	public static final DeferredItem<Item> LEAD_BLOCK = block(GeneticPlaygroundModBlocks.LEAD_BLOCK);
	public static final DeferredItem<Item> STROBE_LIGHT = block(GeneticPlaygroundModBlocks.STROBE_LIGHT);
	public static final DeferredItem<Item> SIREN = block(GeneticPlaygroundModBlocks.SIREN);
	public static final DeferredItem<Item> LAB_LIGHT = block(GeneticPlaygroundModBlocks.LAB_LIGHT);
	public static final DeferredItem<Item> SYRINGE_OF_CREEPER_BLOOD = register("syringe_of_creeper_blood", SyringeOfCreeperBloodItem::new);
	public static final DeferredItem<Item> CREEPER_CELL = register("creeper_cell", CreeperCellItem::new);
	public static final DeferredItem<Item> EXPLOSIVE_PLASMID = register("explosive_plasmid", ExplosivePlasmidItem::new);
	public static final DeferredItem<Item> DOUBLE_HELIX_EXPLOSIVE = register("double_helix_explosive", DoubleHelixExplosiveItem::new);
	public static final DeferredItem<Item> BAUXITE = register("bauxite", BauxiteItem::new);
	public static final DeferredItem<Item> ALUMINIUM_INGOT = register("aluminium_ingot", AluminiumIngotItem::new);
	public static final DeferredItem<Item> STONE_BAUXITE_ORE = block(GeneticPlaygroundModBlocks.STONE_BAUXITE_ORE);
	public static final DeferredItem<Item> DEEPSLATE_BAUXITE_ORE = block(GeneticPlaygroundModBlocks.DEEPSLATE_BAUXITE_ORE);
	public static final DeferredItem<Item> FLUID_TANK = register("fluid_tank", FluidTankItem::new);
	public static final DeferredItem<Item> NEEDLE = register("needle", NeedleItem::new);
	public static final DeferredItem<Item> COPPER_WIRE = register("copper_wire", CopperWireItem::new);
	public static final DeferredItem<Item> ENERGY_BATTERY = register("energy_battery", EnergyBatteryItem::new);
	public static final DeferredItem<Item> MONITOR = register("monitor", MonitorItem::new);
	public static final DeferredItem<Item> CIRCUIT = register("circuit", CircuitItem::new);
	public static final DeferredItem<Item> LEAD_INGOT = register("lead_ingot", LeadIngotItem::new);
	public static final DeferredItem<Item> RAW_LEAD = register("raw_lead", RawLeadItem::new);
	public static final DeferredItem<Item> HEAT_TANK = register("heat_tank", HeatTankItem::new);
	public static final DeferredItem<Item> STONE_LEAD_ORE = block(GeneticPlaygroundModBlocks.STONE_LEAD_ORE);
	public static final DeferredItem<Item> DEEPSLATE_LEAD_ORE = block(GeneticPlaygroundModBlocks.DEEPSLATE_LEAD_ORE);
	public static final DeferredItem<Item> SOLAR_PANEL = block(GeneticPlaygroundModBlocks.SOLAR_PANEL);
	public static final DeferredItem<Item> HEAT_GENERATOR = block(GeneticPlaygroundModBlocks.HEAT_GENERATOR);
	public static final DeferredItem<Item> QUANTUM_CIRCUIT = register("quantum_circuit", QuantumCircuitItem::new);

	// Start of user code block custom items
	// End of user code block custom items
	private static <I extends Item> DeferredItem<I> register(String name, Function<Item.Properties, ? extends I> supplier) {
		return REGISTRY.registerItem(name, supplier, new Item.Properties());
	}

	private static DeferredItem<Item> block(DeferredHolder<Block, Block> block) {
		return block(block, new Item.Properties());
	}

	private static DeferredItem<Item> block(DeferredHolder<Block, Block> block, Item.Properties properties) {
		return REGISTRY.registerItem(block.getId().getPath(), prop -> new BlockItem(block.get(), prop), properties);
	}
}